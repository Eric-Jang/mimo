<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:aop="http://www.springframework.org/schema/aop"
	xmlns:tx="http://www.springframework.org/schema/tx" xmlns:context="http://www.springframework.org/schema/context"
	xsi:schemaLocation="
     http://www.springframework.org/schema/beans 
     http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
     http://www.springframework.org/schema/context 
     http://www.springframework.org/schema/context/spring-context-3.0.xsd"
	default-lazy-init="true">
	
	<bean id="shiroFilter" class="org.apache.shiro.spring.web.ShiroFilterFactoryBean">
    	<property name="securityManager" ref="securityManager"/>
	    <property name="loginUrl" value="/login" />
	    <property name="unauthorizedUrl" value="/admin/deny/" />
	    <!-- The 'filters' property is not necessary since any declared javax.servlet.Filter bean  -->
	    <!-- defined will be automatically acquired and available via its beanName in chain        -->
	    <!-- definitions, but you can perform instance overrides or name aliases here if you like: -->
	    <!-- <property name="filters">
	        <util:map>
	            <entry key="anAlias" value-ref="someFilter"/>
	        </util:map>
	    </property> -->
    	<property name="filterChainDefinitions">
        	<value>
	            /admin/** = authc
	            /security/** = authc,roles[admin]
	            /monitoring-record/list/* = authc,roles[admin]
	            
	            /conf/edit/* = authc,perms[conf:edit]
	            /home-conf/edit/* = authc,perms[home-conf:edit]
	            /email-conf/edit/* = authc,perms[email-conf:edit]
					            
	            /channel/list/* = authc,perms[channel:list]
	            /channel/views/* = authc,perms[channel:list]
	            /channel/create/* = authc,perms[channel:create]
	            /channel/*/edit/* = authc,perms[channel:edit]
	            /channel/*/delete/* = authc,perms[channel:delete]
	            /channel/delete/* = authc,perms[channel:delete]
					            
	            /**/*.ftl* = authc
	            /template/list/* = authc,perms[template:list]
	            /template/create/* = authc,perms[template:create]
	            /template/upload/* = authc,perms[template:create]
	            /template/*/edit/* = authc,perms[template:edit]
	            /template/generate/* = authc,perms[template:edit]
	            /template/*/delete/* = authc,perms[template:delete]
	            /template/delete/* = authc,perms[template:delete]
	            
	            /guestbook/list/* = authc,perms[guestbook:list]
	            /guestbook/*/edit/* = authc,perms[guestbook:edit]
	            /guestbook/*/delete/* = authc,perms[guestbook:delete]
	            /guestbook/delete/* = authc,perms[guestbook:delete]
	            
	            /article/create/* = authc,perms[article:create]
	            /article/*/edit/* = authc,perms[article:edit]
	            /article/*/delete/* = authc,perms[article:delete]
	            /article/delete/* = authc,perms[article:delete]
	            /article/online/* = authc,perms[article:edit]
	            /article/offline/* = authc,perms[article:edit]
	            /article/on-top/* = authc,perms[article:edit]
	            /article/not-on-top/* = authc,perms[article:edit]
	            /article/not-comments/* = authc,perms[article:edit]
	            /article/allow-comments/* = authc,perms[article:edit]
	            
	            /article-attachment/list/* = authc,perms[article-attachment:list]
	            /article-attachment/create/* = authc,perms[article-attachment:create]
	            /article-attachment/*/delete/* = authc,perms[article-attachment:delete]
	            /article-attachment/delete/* = authc,perms[article-attachment:delete]
	            
	            /article-comment/list/* = authc,perms[article-comment:list]
	            /article-comment/*/edit/* = authc,perms[article-comment:edit]
	            /article-comment/*/delete/* = authc,perms[article-comment:delete]
	            /article-comment/delete/* = authc,perms[article-comment:delete]
					            
				# for ueditor upload
	            /**/up.jsp* = authc,perms[photo-resource:upload]
	            /photo-resource/list/* = authc,perms[photo-resource:list]
	            /photo-resource/upload/* = authc,perms[photo-resource:upload]
	            /photo-resource/download/* = authc,perms[photo-resource:download]
	            /photo-resource/delete/* = authc,perms[photo-resource:delete]
	            
	            /resource/list/* = authc,perms[resource:list]
	            /resource/upload/* = authc,perms[resource:upload]
	            /resource/download/* = authc,perms[resource:download]
	            /resource/delete/* = authc,perms[resource:delete]
	            
	            /security-resource/list/* = authc,perms[security-resource:list]
	            /security-resource/upload/* = authc,perms[security-resource:upload]
	            /security-resource/download/* = authc,perms[security-resource:download]
	            /security-resource/delete/* = authc,perms[security-resource:delete]
	            # more URL-to-FilterChain definitions here
	            
	            /** = anon
        	</value>
    	</property>
	</bean>
	
	<bean id="myRealm" class="com.kissme.mimo.infrastructure.shiro.MybatisShiroRealm" />
	
	<bean id="securityManager" class="org.apache.shiro.web.mgt.DefaultWebSecurityManager" >
    	<!-- Single realm app.  If you have multiple realms, use the 'realms' property instead. -->
    	<property name="realm" ref="myRealm"/>
	</bean>
	<bean id="lifecycleBeanPostProcessor" class="org.apache.shiro.spring.LifecycleBeanPostProcessor" />
</beans>
